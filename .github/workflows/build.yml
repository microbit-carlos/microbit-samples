name: Build DAL with Yotta

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'
  schedule:
    # Runs every day at 9 am
    - cron: '0 9 * * *'

jobs:
  build-yotta:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, macos-10.15, windows-2016]
      fail-fast: false
    name: Yotta ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install GCC ARM, CMake, and Ninja (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-16.04' }}
        run: sh ./.github/workflows/install-toolchain-ubuntu.sh
      - name: Install GCC ARM, CMake, and Ninja (Windows)
        if: ${{ matrix.os == 'windows-2016' }}
        run: .\.github\workflows\install-toolchain-win.ps1
      - name: Install GCC ARM, CMake, and Ninja (macOS)
        if: ${{ matrix.os == 'macos-10.15' }}
        run: sh ./.github/workflows/install-toolchain-mac.sh
      - name: Set up Python 3.5
        uses: actions/setup-python@v2
        with:
          python-version: '3.5'
      - name: Install Yotta
        run: python -m pip install yotta
      - name: Check Versions
        run: |
          arm-none-eabi-gcc --version
          cmake --version
          ninja --version
          srec_cat --version
          python --version
          python -m pip --version
          yotta --version
      - name: Set Yotta target
        run: yt target bbc-microbit-classic-gcc
      - name: Build with Yotta
        run: yotta --verbose build
      - name: Upload hex file
        uses: actions/upload-artifact@v1
        with:
          name: hex-yotta-${{ matrix.os }}
          path: build/bbc-microbit-classic-gcc/source/microbit-samples-combined.hex
